name: "Swift 6 Module Template CI"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  test-configure-script:
    name: Test configure.swift script and generate project
    runs-on: macos-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
     
      - name: Test configure script with environment variables
        env:
          SMT_XXPROJECTXNAMEXX: "TestModule"
          SMT_ORGANIZATION_NAME: "Test Organization"
          SMT_COM_AN_ORGANIZATION_IDENTIFIER: "com.test.organization"
          SMT_AUTHOR_NAME: "Test Author"
          SMT_TODAYS_DATE: "January 1, 2024"
          SMT_TODAYS_YEAR: "2024"
          SMT_GITHUB_USERNAME: "testuser"
        run: |
          ./configure.swift
          ls -la OUTPUT/
         
      - name: Verify generated project structure
        run: |
          cd OUTPUT/TestModule
          ls -la
          test -f Package.swift
          test -f README.md
          test -f LICENSE
          test -d Sources/TestModule
          test -d Tests/TestModuleTests
          test -d .github/workflows
         
      - name: Upload generated project as artifact
        uses: actions/upload-artifact@v4
        with:
          name: generated-project
          path: OUTPUT/TestModule/
  deploy-generated-project:
    name: Deploy generated project to test branch
    needs: test-configure-script
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
         
      - name: Download generated project
        uses: actions/download-artifact@v4
        with:
          name: generated-project
          path: deployment-content/
         
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
         
      - name: Deploy to deployment branch
        run: |
          # Create deployment branch (or reset if exists)
          git checkout --orphan deployment || git checkout deployment
          
          # Remove all existing content
          git rm -rf . || true
          
          # Copy generated project content to root
          cp -r deployment-content/* .
          
          # Add all files
          git add .
          
          # Create commit
          git commit -m "Deploy generated project from commit ${{ github.sha }}"
          
          # Force push to deployment branch
          git push origin deployment --force
